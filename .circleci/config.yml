version: 2

build-distro-bin: &build-distro-bin
  machine: true
  steps:
    - checkout
    # cannot interpolate env var and use as a cache key so just copy the Dockerfile to another filename
    - run: cp docker/distro_release/Dockerfile.$CIRCLE_JOB docker/distro_release/Dockerfile
    - restore_cache:
        keys:
        - v1-{{ .Environment.CIRCLE_JOB }}-image-{{ checksum "docker/distro_release/Dockerfile" }}
    # - restore_cache:
    #     keys:
    #     - v1-{{ .Environment.CIRCLE_JOB }}-dependencies-{{ checksum "postgrest.cabal" }}-{{ checksum "stack.yaml" }}
    - run:
        name: load or build docker image
        command: |
          if [[ -e ~/image.tar ]]; then
            docker load -i ~/image.tar
          else
            docker build --rm=false -t $CIRCLE_JOB -f docker/distro_release/Dockerfile.$CIRCLE_JOB docker/distro_release/
            docker save $CIRCLE_JOB > ~/image.tar
          fi
    - run:
        name: build binary
        command: |
          docker run -it \
            -v $(pwd):/source \
            -v $HOME:/dist \
            -e PREFIX="/dist" \
            $CIRCLE_JOB install
          # volumes owned by root if chown is not done the save_cache step fails silently
          # sudo chown -R circleci:circleci ~/.stack .stack-work
    - run:
        name: compress binary
        command: |
          mkdir -p /tmp/workspace/bin
          cd /tmp/workspace/bin
          tar cvJf amqpspawn-$CIRCLE_TAG-$CIRCLE_JOB.tar.xz -C ~/bin amqpspawn
          tar cvJf amqpsend-$CIRCLE_TAG-$CIRCLE_JOB.tar.xz -C ~/bin amqpsend
    - persist_to_workspace:
        root: /tmp/workspace
        paths:
          - bin/*
    - save_cache:
        paths:
          - ~/image.tar
        key: v1-{{ .Environment.CIRCLE_JOB }}-image-{{ checksum "docker/distro_release/Dockerfile" }}
    # - save_cache:
    #     paths:
    #       - "~/.stack"
    #       - ".stack-work"
    #     key: v1-{{ .Environment.CIRCLE_JOB }}-dependencies-{{ checksum "postgrest.cabal" }}-{{ checksum "stack.yaml" }}

jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: build
          command: |
            echo 1
      

  centos6:
    <<: *build-distro-bin

  centos7:
    <<: *build-distro-bin

  ubuntu:
    <<: *build-distro-bin

  ubuntui386:
    <<: *build-distro-bin

  alpine:
    <<: *build-distro-bin
  release:
    docker:
      - image: circleci/golang:1.8
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: add body and tars to github release
          command: |
            go get -u github.com/tcnksm/ghr
            ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $CIRCLE_TAG /tmp/workspace/bin
      # - setup_remote_docker
      # - run:
      #     name: publish docker image
      #     command: |
      #       docker build --build-arg AMQPTOOLS_VERSION=$CIRCLE_TAG -t amqptools ./docker/
      #       docker login -u $DOCKER_USER -p $DOCKER_PASS
      #       docker tag amqptools subzerocloud/amqptools:$CIRCLE_TAG
      #       docker push subzerocloud/amqptools:$CIRCLE_TAG
      #       docker tag amqptools subzerocloud/amqptools:latest
      #       docker push subzerocloud/amqptools:latest

workflows:
  version: 2
  build-release:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - centos7:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - ubuntu:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - ubuntui386:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - alpine:
          requires:
            - build
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - release:
          requires:
            - centos7
            - ubuntu
            - ubuntui386
            - alpine
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/